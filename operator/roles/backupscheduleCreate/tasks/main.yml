---
# tasks file for BackupSchedule
- name: Set Default Username
  set_fact:
    username: "admin"
  when: username is not defined  
  
- name: Set Fossul namespace 
  set_fact:
    fossul_namespace: "fossul"
  when: fossul_namespace is not defined

- name: Set Fossul policy 
  set_fact:
    policy: "daily"
  when: policy is not defined

- name: Set Fossul schedule 
  set_fact:
    schedule: "0 0 * * *"
  when: schedule is not defined     

- name: Set Fossul Server URL 
  set_fact:
    fossul_server_url: "http://fossul-server.{{ fossul_namespace }}.svc.cluster.local:8000"
  when: fossul_server_url is not defined 

- name: Get Fossul Secret
  block:
  - name: Get Fossul Secret
    k8s_info:
      api_version: v1
      kind: Secret
      name: fossul-secret
      namespace: "{{ fossul_namespace }}"
    register: secret       
  - name: Get Fossul Password
    set_fact:
      fossul_password: "{{ item.value | b64decode }}" 
    with_dict: "{{ secret.resources[0].data }}"
    when: item.key == "fossul-password"
    
  - name: Fossul Secret Status
    operator_sdk.util.k8s_status:
      api_version: fossul.io/v1
      kind: BackupSchedule
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        fossulResult: 
          secretStatus: "Fossul secret read successfully"

  rescue:
  - name: Fossul Secret Status
    operator_sdk.util.k8s_status:
      api_version: fossul.io/v1
      kind: BackupSchedule
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        fossulResult: 
          secretStatus: "Problem with fossul secret, make sure fossul is installed in fossul namespace or fossul_namespace is set."

- name: Test Fossul API
  block:
  - name: Get Fossul Status
    uri:
      url: "{{fossul_server_url}}/status"
      headers:
        Content-Type: application/json
        Accept: application/json    
      method: GET
      body_format: json    
      force_basic_auth: yes
      status_code: [200]
      return_content: yes
    register: fossul_status

  - name: Update fossul status
    operator_sdk.util.k8s_status:
      api_version: fossul.io/v1
      kind: BackupSchedule
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        fossulResult: 
          fossulStatus: "[{{ fossul_status.json.msg }}] [{{ fossul_status.json.version }}]"    

  rescue:
  - name: Update fossul status
    operator_sdk.util.k8s_status:
      api_version: fossul.io/v1
      kind: BackupSchedule
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        fossulResult: 
          fossulStatus: "Error couldn't reach fossul API, check if fossul is deployed in fossul namespace or set fossul_namespace parameter in spec"    

- name: Create Backup Schedule Block
  block:
  - name: Create Backup Schedule
    uri:
      url: "{{fossul_server_url}}/addSchedule/{{ ansible_operator_meta.namespace }}/{{ deployment_name }}/{{ policy }}"
      headers:
        Content-Type: application/json
        Accept: application/json    
      user: "{{username}}"
      password: "{{fossul_password}}"
      method: GET
      body: "{ \"value\": \"{{ cron_schedule }}\" }"
      body_format: json
      force_basic_auth: yes
      status_code: [200]
      return_content: yes
    register: schedule_create
    failed_when: schedule_create.json.messages[0].level == "ERROR"

  - name: Update Schedule Status
    operator_sdk.util.k8s_status:
      api_version: fossul.io/v1
      kind: BackupSchedule
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        fossulResult: 
          scheduleStatus: "[{{ schedule_create.json.messages[0].level }}] {{ schedule_create.json.messages[0].message }}"  

  rescue:
  - name: print schedule create
    debug:
      msg: "{{ schedule_create }}"

  - name: Update Schedule Status
    operator_sdk.util.k8s_status:
      api_version: fossul.io/v1
      kind: BackupSchedule
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        fossulResult: 
          scheduleStatus: "[{{ schedule_create.json.messages[0].level }}] {{ schedule_create.json.messages[0].message }}"                
